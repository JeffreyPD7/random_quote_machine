{"version":3,"sources":["smacss/base/_typography.smcs.scss","master.scss","smacss/base/_base.smcs.scss","master.css","smacss/mixins/mixins-lib/_gradience.mxn.scss","smacss/mixins/mixins-lib/_body-shadow.mxn.scss","smacss/theme/_theme.smcs.scss","regions/header/title/_title.hdr.scss","smacss/mixins/mixins-lib/_pseudo-declare.mxn.scss","smacss/mixins/mixins-lib/_media-queries.mxn.scss"],"names":[],"mappings":"AAEA,4DAKA,iECNA,KACE,iBAAkB,QCIpB,EACE,MAAO,QADT,QAII,MAAO,QAIX,EACE,YAAa,cAAA,CAAA,QAAA,CAAA,WACb,YAAa,IAIf,cACE,MAAO,KACP,OAAQ,EAAA,KAIV,OACE,QAAS,EACT,OAAQ,ECEV,QACE,QAAS,EAAE,KACX,YAAa,aAAa,CAAE,WAC5B,MAAO,KAET,gBCnCA,WAAA,ODqCE,YAAa,EAAE,IAAI,IAAI,eAEzB,0BACE,OAAQ,IAC2B,iCAAnC,kCACE,QAAS,GACT,QAAS,MACT,SAAU,SACV,iBAAkB,KAClB,OAAQ,QACR,MAAO,IACP,cAAe,KACf,WAAY,EAAE,IAAI,IAAI,eACxB,kCACE,KAAM,IACR,iCACE,MAAO,IAEX,kBACE,WAAY,OACZ,YAAa,EACb,YAAa,EAAE,IAAI,IAAI,eAGzB,yCACqC,iCAAnC,kCACE,QAAS,GACT,QAAS,MACT,SAAU,SCnCX,MAAA,IC9BH,kCFoEI,KAAM,IACR,iCACE,MAAO,KAMX,QACE,OAAQ,KACR,iBAAkB,KAClB,SAAU,SACV,OAAQ,EAEV,uBACE,OAAQ,IAAI,KACZ,yBACE,MAAO,IACP,OAAQ,EAAE,aACV,WAAY,OAEhB,mBACA,mBACE,MAAO,KACP,QAAS,GACT,OAAQ,KAAK,EAEf,mBACE,WAAY,MACZ,qBElEC,OAAA,KC/BH,YAAA,KHoGI,MAAO,KAEX,mBIrFA,WAAA,KAEA,YAAA,IAAA,MAAA,eASA,MACE,OAAA,MJyFF,QACE,QKlHS,EAD8C,KLoHvD,YKpHsB,aAAK,CAAA,WLqH3B,MKlHE,KLoHJ,gBACE,WInFa,OJoFb,YInFE,EAAa,IAAE,IAAK,eJqFxB,0BACE,OIlFkB,IACT,iCAdX,kCAca,QAAO,GJoFhB,QAAS,MIjFb,SAAA,SACE,iBAAmB,KACnB,OAAA,QACA,MAAA,IJmFE,cAAe,KIhFnB,WAAA,EAAA,IAAA,IAAA,eJkFE,kCACE,KIjFC,IEZG,iCFeN,MAAA,IJkFF,kBACE,WK5ImC,OL6InC,YI7Ee,EAPf,YAAA,EAAA,IAAA,IAAA,eJwFF,yCACqC,iCAAnC,kCI9DF,QAAA,GJgEI,QAAS,MACT,SI/DC,SAiBL,MAAA,IJgDE,kCACE,KI/CC,IAoBL,iCJ6BI,MAAO","file":"master.css","sourcesContent":["\n// Use this style for quick editing\n@import url('https://fonts.googleapis.com/css?family=Ubuntu');\n\n//@import \"\";\n\n\n@import url('https://fonts.googleapis.com/css?family=Encode+Sans');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//////////////////////////////////////////////////////////////////\n// Old - Use as Template /////////////////////////////////////////\n//////////////////////////////////////////////////////////////////\n\n//$fontsDir: '../../assets/fonts/';\n\n// Days One\n//@font-face {\n//  font-family: 'days-one';\n//  src: url('../../assets/fonts/Days_One/DaysOne-Regular.ttf');\n//  font-weight: 500;\n//}\n\n// Ubuntu\n//@font-face {\n//  font-family: 'Ubuntu';\n//  src: url(\"../../assets/fonts/Ubuntu/Ubuntu-Regular.ttf\");\n//  font-weight: 500;\n//}\n","\nbody {\n  background-color: #00bcd4;\n}\n\n//SMACSS\n@import \"smacss/smacss.smcs\";\n\n//Regions\n@import \"regions/header/title/title.hdr\";\n@import \"regions/footer/footer.ftr\";\n\n// Views\n@import \"views/home/home.stl\";\n\n\n\n","\nhtml {\n  //overflow: hidden;\n}\n\n// Defaulting a tags\na {\n  color: inherit;\n\n  &:hover {\n    color: inherit;\n  }\n}\n\np {\n  font-family: 'Ubuntu Light', Fallback, sans-serif;\n  font-weight: 900;\n}\n\n// Centering Columns\n.col-centered{\n  float: none;\n  margin: 0 auto;\n}\n\n// Takes off hyper link border from ng-click events\n*:focus {\n  outline: none;\n  border: 0;\n}\n\n@import \"typography.smcs\";\n\n\n\n\n\n",null,"/***\n  Gradient effect ~\n    default gradience, white and black\n\n  Parameters ~\n    $fade: opacity of color\n      *default: 0.3\n\n    $orientation: gradient direction\n      *default: top-bottom\n\n    $radius-bool: if value exist, express 'true'\n      *default: 'false'\n\n    $radius-value: value of roundness\n      *default: none\n\n  Usage ~\n    @include gradience(0.5,true,inherit);\n      or\n    @include gradience(0.5,false);\n      or\n    @include gradience();\n      or\n    @include gradience($radius-bool:true,$radius-value: 5px)\n      <The above example is if in case you'd like to change certain arguments>\n\n  DISCLAIMER ~\n    If parent measure of width is percentage value,\n      the output will be disproportional\n */\n\n\n@mixin gradience($fade:0.3, $orientation: top-bottom, $percent: 0%, $radius-bool: false, $radius-value: none) {\n  @if $orientation == top-bottom {\n    background: linear-gradient(rgba(black, $fade) $percent, rgba(white, $fade));\n  }\n  @else if $orientation == right-left {\n    background: linear-gradient(to right,rgba(black, $fade) $percent, rgba(white, $fade));\n  }\n  @else if $orientation == left-right {\n    background: linear-gradient(to left,rgba(black, $fade) $percent, rgba(white, $fade));\n  }\n  @else if $orientation == bottom-top {\n    background: linear-gradient(to top,rgba(black, $fade) $percent, rgba(white, $fade));\n  }\n\n  height: inherit;\n  width: inherit;\n  @if $radius-bool {\n    border-radius: $radius-value;\n  }\n}\n","/***\n  Body Shadow Effect ~\n\n  Parameters ~\n    $orientation: shadow direction\n      *default: down\n\n    $distance: space between the body and shadow\n      *default: 3px\n\n    $blur: density spread value of shadow\n      *default: 3px\n\n    $color: color of shadow\n      *default: black\n\n    $opacity: opacity of color\n      *default: 0.3\n\n  Usage ~\n    @include body-shadow(up,5px,6px,white,0.8);\n      or\n    @include body-shadow(left,10px);\n      or\n    @include body-shadow();\n      or\n    @include body-shadow($distance: 12px,$color:gray)\n      <The above example is if in case you'd like to change certain arguments>\n\n  DISCLAIMER ~\n    General colors are valid in mixin; the $color argument will not work if a hex value is placed\n */\n\n\n@mixin body-shadow($orientation: down, $distance: 3px, $blur: 3px, $color: black, $opacity: 0.5) {\n  @if $orientation == up {\n    box-shadow: 0 -$distance $blur rgba($color,$opacity);\n  }\n  @else if $orientation == right {\n    box-shadow: $distance 0 $blur rgba($color,$opacity);\n  }\n  @else if $orientation == down {\n    box-shadow: 0 $distance $blur rgba($color,$opacity);\n  }\n  @else if $orientation == left {\n    box-shadow: -$distance 0 $blur rgba($color,$opacity);\n  }\n}\n","/* PAGES (specific colors for each page)\n============================================================================= */\n\n// Light Blue 500\n$primary-clr: #00bcd4;\n\n// Orange A400\n$secondary-1-clr: #ff9100;\n\n// Indigo A400\n$secondary-2-clr: #3d5afe;\n","\n/* Default Class Values\n======================*/\n// Box\n$height: 100%;\n\n// Color & Background\n$background-color: $primary-clr;\n\n// Positioning\n\n// Font & Text\n$font-family:'Encode Sans', sans-serif;\n$font-size: 50px;\n$color: blue;\n$text-align: center;\n\n/*====================*/\n\n/*------------------------------------------------------------------------------\n Default |\n-------*/\n.header {\n  padding: 0 15px;\n  font-family: $font-family;\n  color: white;\n}\n\n.header_-_title {\n  text-align: center;\n  text-shadow: 0 3px 7px rgba(black, 0.3);\n}\n\n.header_-_horizontal-line {\n  height: 4px;\n\n  &::before,\n  &::after {\n    @include pseudo();\n    background-color: white;\n    height: inherit;\n    width: 38%;\n    border-radius: 20px;\n    box-shadow: 0 3px 7px rgba(black, 0.1);\n  }\n\n  &::before { left: 10%; }\n  &::after { right: 10%; }\n}\n\n.header_-_details {\n  text-align: center;\n  line-height: 0;\n  text-shadow: 0 3px 7px rgba(black, 0.3);\n}\n\n/*******************************************************************************\n* XS |\n****/\n\n@include mq('xs') {\n  .header_-_horizontal-line {\n    //$gap: 4%;\n    //$m-width: 30%;\n\n    &::before,\n    &::after {\n      @include pseudo();\n      width: 30%;\n    }\n\n    &::before { left: 18%; }\n    &::after { right: 18%; }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*------------------------------------------------------------------------------\n- SM |\n---*/\n\n@include mq('sm') {\n  .title{\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n/*------------------------------------------------------------------------------\n* MD |\n---*/\n\n@include mq('md') {\n  .title{\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*------------------------------------------------------------------------------\n  LG |\n---*/\n\n@include mq('lg') {\n  .title{\n\n  }\n}\n\n","\n\n\n//Pseudo Declare\n@mixin pseudo($display: block, $pos: absolute, $content: '') {\n    content: $content;\n    display: $display;\n    position: $pos;\n}\n","/* Media queries\nA massive time saver! You can just use pixel values but we have some default breakpoints setup that work too, another\n time saver while keeping your breakpoints consistent.\n*/\n\n// Default Breakpoints\n//$breakpoints: (\n//    \"phone\":        400px,\n//    \"phone-wide\":   480px,\n//    \"phablet\":      560px,\n//    \"tablet-small\": 640px,\n//    \"tablet\":       768px,\n//    \"tablet-wide\":  1024px,\n//    \"desktop\":      1248px,\n//    \"desktop-wide\": 1440px\n//);\n\n//Previous Custom Breakpoints\n//$breakpoints: (\n//        \"phone\":        362px,\n//        \"phone-wide\":   480px,\n//        \"phablet\":      601px,\n//        \"tablet-small-xs\": 769px,\n//        \"tablet-sm\":       992px,\n//        \"tablet-wide\":  null,\n//        \"desktop-md\":   1200px,\n//        \"desktop-wide\": null\n//);\n\n//Custom Breakpoints\n//NOTE: Do not place number values next to breakpoint names, it will not work\n$breakpoints: (\n        \"zn\":       330px,\n        \"xs\":       576px,\n        \"sm\":       768px,\n        \"md\":       992px,\n        \"lg\":       1200px,\n);\n\n// Change \"type\" to min variable if scaled media querie backwards\n@mixin mq($width, $type: min) {\n    @if map_has_key($breakpoints, $width) {\n        $width: map_get($breakpoints, $width);\n        @if $type == max {\n            $width: $width - 1px;\n        }\n        @media only screen and (#{$type}-width: $width) {\n            @content;\n        }\n    }\n}\n\n// The example below showing the padding and font-size increasing once the viewport gets over 1024px.\n\n/*\n.site-header {\n    padding: 2rem;\n    font-size: 1.8rem;\n    @include mq('tablet-wide') {\n        padding-top: 4rem;\n        font-size: 2.4rem;\n    }\n}\n*/\n\n//Source - http://engageinteractive.co.uk/blog/top-10-scss-mixins\n"]}